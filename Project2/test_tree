import numpy as np
from sklearn.cluster import KMeans
data = np.random.rand(100, 1) #生成一个随机数据，样本大小为100, 特征数为3


def hikmeans(data, d, depth):
    list = []#建一个个数等于各层所有nodes总和的空列表
    n = depth - 1
    for i in range(depth):
        for k in range(d ** (depth - n)):
            list.append([])
        n = n - 1
    estimator = KMeans(n_clusters=d)#对原始数据第一次kmeans
    estimator.fit(data)
    label_pred = estimator.labels_

    for j in range(d):#得到第一层各nodes
        for i in range(len(data)):
            if label_pred[i] == j:
                list[j].append(data[i])
    allnodes = hhikmeans(list, d, depth, 1)
    return allnodes


def hhikmeans(data1, d, depth, count):#对第一层nodes进行kmeans，逐层递归
    if count == depth:
        return data1
    for n in range(depth):
        m = 0
        for m in range(n):
            m = 3 * m + 3
        for i in range(m, m+d**count):
            estimator = KMeans(n_clusters=d)
            estimator.fit(np.array(data1[i]))
            label_pred = estimator.labels_
            for j in range(d):
                for k in range(len(data1[i])):
                    if label_pred[k] == j:
                        data1[d*(i+1)+j].append(data1[i][k])
    return hhikmeans(data1, d, depth, count+1)


allnode = hikmeans(data, 2, 3)
